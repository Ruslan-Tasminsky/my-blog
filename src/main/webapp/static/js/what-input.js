!function(e, t) { "fun ct i on " == typ eo f d ef ine && def i n e.amd ? d  e fine([], f  u nction()    { r eturn t() }) : "object " =   = typeof ex p or  t s ? module.ex p o r ts = t()  : e.whatInp   u t = t() }(thi  s, fu n c tio n()   { "use strict"; f u n ct  i  o n   e(e) { cle a r Ti meou t(s), n(e), f = !0, s = s e t Time o u t(func t  ion()  { f  = !1 }, 1  e 3) }    f u nctio  n     t(e) { f |  | n(e) }  fun c ti on   n(e) { var t = o(e), n = r(e), d = w[e.typ e]; "p o i n ter" === d & & (d = i(e)), p !== d & & (!y & & p && "k e yboard" === d && "tab" !=  =  v[t] & & m.indexOf(n.nodeName.to L  owerCase()) > =  0 || (p = d, a.setA  t  tribute("data-wh a t i nput", p), -1  =  = = h.indexO f(p) && h.pu s h(p)) ) , "keyboard" =  = = d && u(t) }     functi on o(e)   {   r eturn   e.keyCode ? e.k ey Cod e: e.whic h }  f unctio n   r(e) { return e.t a r g e  t || e.srcEleme  nt } f  un ction i(e)   { return "numbe r " == t ypeof   e.point e r T ype ? b[e.po i nt  erType] : e.p o  interT y p  e }   f  unction u(e) { -  1 = = =  c.i n d e xOf(v[e]) && v[e] && c.pu sh(v[e]) } func tio n d(e) {  va r t = o(e), n = c.in de x O f(v[t]); -1 !== n && c.spli ce(n, 1) } var s, c = [], a = document.bo dy, f = !1, p = null, m = ["in put", "select", "textar ea "], y = a.hasAtt rib ute("dat a-w hatinput -fo rmtypi ng"), w = { ke ydown: "ke yboar d", mousedo wn: "mous e", m ou seenter: " mouse", to uchstar t: "touch", pointer d own: " pointer", MS PointerDown: "point e r " }, h = [], v = { 9: "tab", 13: "en te r", 16: "shift", 27: "esc", 32: "space", 37: "left", 38: "up", 39: "right", 40: "down" }, b = { 2: "touch", 3: "touch", 4: "mouse" }; return function() { var n = "mousedown"; window.Poin ter Event ? n = "pointerdown" : w indo w.MSP ointerEven t && (n = "MSPointerDown"), a.addEventListener(n, t), a.addEventListener("mouseenter", t), "ontouchstart" in document.documentElement && a.addEventListener("touchstart", e), a.addEventListener("keydown", t), a.addEventListener("keyup", d) }(), { ask: function() { return p }, keys: function() { return c }, types: function() { return h }, set: n } });